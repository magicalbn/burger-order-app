{"id":"../node_modules/posthtml-parser/index.js","dependencies":[{"name":"E:\\HTML\\React Projects\\burger-builder\\package.json","includedInParent":true,"mtime":1605006976611},{"name":"E:\\HTML\\React Projects\\burger-builder\\.babelrc","includedInParent":true,"mtime":1604411538579},{"name":"E:\\HTML\\React Projects\\burger-builder\\node_modules\\posthtml-parser\\package.json","includedInParent":true,"mtime":1604411089744},{"name":"htmlparser2/lib/Parser","loc":{"line":3,"column":21},"parent":"E:\\HTML\\React Projects\\burger-builder\\node_modules\\posthtml-parser\\index.js","resolved":"E:\\HTML\\React Projects\\burger-builder\\node_modules\\htmlparser2\\lib\\Parser.js"}],"generated":{"js":"'use strict';\n\nvar Parser = require('htmlparser2/lib/Parser');\n\n/**\n * @see https://github.com/fb55/htmlparser2/wiki/Parser-options\n */\nvar defaultOptions = {lowerCaseTags: false, lowerCaseAttributeNames: false};\n\nvar defaultDirectives = [{name: '!doctype', start: '<', end: '>'}];\n\n/**\n * Parse html to PostHTMLTree\n * @param  {String} html\n * @param  {Object} [options=defaultOptions]\n * @return {PostHTMLTree}\n */\nfunction postHTMLParser(html, options) {\n    var bufArray = [],\n        results = [];\n\n    bufArray.last = function() {\n        return this[this.length - 1];\n    };\n\n    function isDirective(directive, tag) {\n        if (directive.name instanceof RegExp) {\n            var regex = RegExp(directive.name.source, 'i');\n\n            return regex.test(tag);\n        }\n\n        if (tag !== directive.name) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function parserDirective(name, data) {\n        var directives = [].concat(defaultDirectives, options.directives || []);\n        var last = bufArray.last();\n\n        for (var i = 0; i < directives.length; i++) {\n            var directive = directives[i];\n            var directiveText = directive.start + data + directive.end;\n\n            name = name.toLowerCase();\n            if (isDirective(directive, name)) {\n                if (!last) {\n                    results.push(directiveText);\n                    return;\n                }\n\n                last.content || (last.content = []);\n                last.content.push(directiveText);\n            }\n        }\n    }\n\n    function normalizeArributes(attrs) {\n        var result = {};\n        Object.keys(attrs).forEach(function(key) {\n            var obj = {};\n                obj[key] = attrs[key].replace(/&quot;/g, '\"');\n            Object.assign(result, obj);\n        });\n\n        return result;\n    }\n\n    var parser = new Parser({\n        onprocessinginstruction: parserDirective,\n        oncomment: function(data) {\n            var comment = '<!--' + data + '-->',\n                last = bufArray.last();\n\n            if (!last) {\n                results.push(comment);\n                return;\n            }\n\n            last.content || (last.content = []);\n            last.content.push(comment);\n        },\n        onopentag: function(tag, attrs) {\n            var buf = { tag: tag };\n\n            if (Object.keys(attrs).length) {\n                buf.attrs = normalizeArributes(attrs);\n            }\n\n            bufArray.push(buf);\n        },\n        onclosetag: function() {\n            var buf = bufArray.pop();\n\n            if (!bufArray.length) {\n                results.push(buf);\n                return;\n            }\n\n            var last = bufArray.last();\n            if (!Array.isArray(last.content)) {\n                last.content = [];\n            }\n\n            last.content.push(buf);\n        },\n        ontext: function(text) {\n            var last = bufArray.last();\n            if (!last) {\n                results.push(text);\n                return;\n            }\n\n            last.content || (last.content = []);\n            last.content.push(text);\n        }\n    }, options || defaultOptions);\n\n    parser.write(html);\n    parser.end();\n\n    return results;\n}\n\nfunction parserWrapper() {\n    var option;\n\n    function parser(html) {\n        var opt = Object.assign(defaultOptions, option);\n        return postHTMLParser(html, opt);\n    }\n\n    if (\n      arguments.length === 1 &&\n      Boolean(arguments[0]) &&\n      arguments[0].constructor.name === 'Object'\n    ) {\n        option = arguments[0];\n        return parser;\n    }\n\n    option = arguments[1];\n    return parser(arguments[0]);\n}\n\nmodule.exports = parserWrapper;\nmodule.exports.defaultOptions = defaultOptions;\nmodule.exports.defaultDirectives = defaultDirectives;\n","map":{"mappings":[{"source":"../node_modules/posthtml-parser/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/posthtml-parser/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}}],"sources":{"../node_modules/posthtml-parser/index.js":"'use strict';\n\nvar Parser = require('htmlparser2/lib/Parser');\n\n/**\n * @see https://github.com/fb55/htmlparser2/wiki/Parser-options\n */\nvar defaultOptions = {lowerCaseTags: false, lowerCaseAttributeNames: false};\n\nvar defaultDirectives = [{name: '!doctype', start: '<', end: '>'}];\n\n/**\n * Parse html to PostHTMLTree\n * @param  {String} html\n * @param  {Object} [options=defaultOptions]\n * @return {PostHTMLTree}\n */\nfunction postHTMLParser(html, options) {\n    var bufArray = [],\n        results = [];\n\n    bufArray.last = function() {\n        return this[this.length - 1];\n    };\n\n    function isDirective(directive, tag) {\n        if (directive.name instanceof RegExp) {\n            var regex = RegExp(directive.name.source, 'i');\n\n            return regex.test(tag);\n        }\n\n        if (tag !== directive.name) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function parserDirective(name, data) {\n        var directives = [].concat(defaultDirectives, options.directives || []);\n        var last = bufArray.last();\n\n        for (var i = 0; i < directives.length; i++) {\n            var directive = directives[i];\n            var directiveText = directive.start + data + directive.end;\n\n            name = name.toLowerCase();\n            if (isDirective(directive, name)) {\n                if (!last) {\n                    results.push(directiveText);\n                    return;\n                }\n\n                last.content || (last.content = []);\n                last.content.push(directiveText);\n            }\n        }\n    }\n\n    function normalizeArributes(attrs) {\n        var result = {};\n        Object.keys(attrs).forEach(function(key) {\n            var obj = {};\n                obj[key] = attrs[key].replace(/&quot;/g, '\"');\n            Object.assign(result, obj);\n        });\n\n        return result;\n    }\n\n    var parser = new Parser({\n        onprocessinginstruction: parserDirective,\n        oncomment: function(data) {\n            var comment = '<!--' + data + '-->',\n                last = bufArray.last();\n\n            if (!last) {\n                results.push(comment);\n                return;\n            }\n\n            last.content || (last.content = []);\n            last.content.push(comment);\n        },\n        onopentag: function(tag, attrs) {\n            var buf = { tag: tag };\n\n            if (Object.keys(attrs).length) {\n                buf.attrs = normalizeArributes(attrs);\n            }\n\n            bufArray.push(buf);\n        },\n        onclosetag: function() {\n            var buf = bufArray.pop();\n\n            if (!bufArray.length) {\n                results.push(buf);\n                return;\n            }\n\n            var last = bufArray.last();\n            if (!Array.isArray(last.content)) {\n                last.content = [];\n            }\n\n            last.content.push(buf);\n        },\n        ontext: function(text) {\n            var last = bufArray.last();\n            if (!last) {\n                results.push(text);\n                return;\n            }\n\n            last.content || (last.content = []);\n            last.content.push(text);\n        }\n    }, options || defaultOptions);\n\n    parser.write(html);\n    parser.end();\n\n    return results;\n}\n\nfunction parserWrapper() {\n    var option;\n\n    function parser(html) {\n        var opt = Object.assign(defaultOptions, option);\n        return postHTMLParser(html, opt);\n    }\n\n    if (\n      arguments.length === 1 &&\n      Boolean(arguments[0]) &&\n      arguments[0].constructor.name === 'Object'\n    ) {\n        option = arguments[0];\n        return parser;\n    }\n\n    option = arguments[1];\n    return parser(arguments[0]);\n}\n\nmodule.exports = parserWrapper;\nmodule.exports.defaultOptions = defaultOptions;\nmodule.exports.defaultDirectives = defaultDirectives;\n"},"lineCount":152}},"hash":"12abbfdc2ef9fc06f3085736e934e936","cacheData":{"env":{}}}