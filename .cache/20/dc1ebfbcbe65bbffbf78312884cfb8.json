{"id":"../node_modules/ws/lib/validation.js","dependencies":[{"name":"E:\\HTML\\React Projects\\burger-builder\\package.json","includedInParent":true,"mtime":1605006976611},{"name":"E:\\HTML\\React Projects\\burger-builder\\.babelrc","includedInParent":true,"mtime":1604411538579},{"name":"E:\\HTML\\React Projects\\burger-builder\\node_modules\\ws\\package.json","includedInParent":true,"mtime":1604411084118},{"name":"utf-8-validate","optional":true,"loc":{"line":4,"column":30},"parent":"E:\\HTML\\React Projects\\burger-builder\\node_modules\\ws\\lib\\validation.js"}],"generated":{"js":"'use strict';\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  exports.isValidUTF8 = typeof isValidUTF8 === 'object'\n    ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0\n    : isValidUTF8;\n} catch (e) /* istanbul ignore next */ {\n  exports.isValidUTF8 = () => true;\n}\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nexports.isValidStatusCode = (code) => {\n  return (\n    (code >= 1000 &&\n      code <= 1013 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n};\n","map":{"mappings":[{"source":"../node_modules/ws/lib/validation.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ws/lib/validation.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"../node_modules/ws/lib/validation.js":"'use strict';\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  exports.isValidUTF8 = typeof isValidUTF8 === 'object'\n    ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0\n    : isValidUTF8;\n} catch (e) /* istanbul ignore next */ {\n  exports.isValidUTF8 = () => true;\n}\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nexports.isValidStatusCode = (code) => {\n  return (\n    (code >= 1000 &&\n      code <= 1013 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n};\n"},"lineCount":30}},"hash":"d711591bf3983ad867e9abafe6b31968","cacheData":{"env":{}}}